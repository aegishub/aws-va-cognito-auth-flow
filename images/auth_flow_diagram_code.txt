@startuml
title Authentication Flow: Verified Access + Cognito + Web App

actor User
participant "Cloudflare\n(test.my-site.com)" as CF
participant "AWS Verified Access\n(verified-access.*.amazonaws.com)" as VA
participant "Amazon Cognito\n(auth.eu-central-1.amazoncognito.com)" as Cognito
participant "Web Application" as WebApp

== Step 1: Initial Access ==
User -> CF : Open https://test.my-site.com/
CF -> VA : Resolve CNAME and Forward request to Verified Access Endpoint
note right of CF: https://...test.edge-...verified-access...amazonaws.com

== Step 2: Verified Access Auth ==
VA -> User : Redirect to Cognito login page
User -> Cognito : Login (username/password)
Cognito -> VA : Redirect to  Verified Access Endpoint with athorization code grant

== Step 3: VA validates with Cognito ==
VA -> Cognito :  Verified Access Exchange code for VA auth tokens /oauth2/token
VA <- Cognito : Get  Verified Access auth tokens
note right of VA: AWSVAAuthSessionCookies (specific VA session tokens)

VA -> User : Set VA session tokens to cookies \n add 'x-amzn-ava-user-context'  header
note right of User: 'x-amzn-ava-user-context' specific authirization header
VA -> User : Redirect user to Web App at https://test.my-site.com/

== Step 4: WebApp OAuth Flow ==
User -> WebApp : GET https://test.my-site.com/
WebApp -> WebApp : Validate 'x-amzn-ava-user-context' \n + detect mising auth tokens
WebApp -> User  : Redirect to Cognito login page
User -> Cognito : Open Cognito login page (with add 'x-amzn-ava-user-context')
note right of User: https://....auth.eu-central-1.amazoncognito.com/login
note right of User: initiate the OAuth 2.0 Authorization Code Grant flow.
Cognito -> Cognito: Cognito recognizes the existing user session \n redirects the user back with authorization Code Grant
Cognito -> User : Redirects GET /callback?code=...

User -> WebApp : GET /callback?code=...
WebApp -> WebApp : Validate 'x-amzn-ava-user-context' 

WebApp -> Cognito : Web App Exchange code grant for auth tokens
Cognito -> WebApp : id_token + access_token
WebApp -> WebApp : Validate id_token and access_token \n Validate 'x-amzn-ava-user-context' 
WebApp -> User : Set session / cookies

== Step 5: Authenticated Access ==
User -> WebApp : Access protected route (/usermanagement, /admin, etc.)
WebApp -> WebApp : Validate 'x-amzn-ava-user-context and tokens'
WebApp -> User : Render content

== Optional: Logout ==
User -> WebApp : GET /signout
WebApp -> WebApp: Delete auth cookies and 'x-amzn-ava-user-context and tokens'
WebApp -> Cognito : Redirect to Cognito logout endpoint to signout user session
Cognito -> User : Redirect to /login

@enduml